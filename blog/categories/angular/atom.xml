<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Angular | Steven Farlie's Blog]]></title>
  <link href="http://stevenfarlie.github.io/blog/categories/angular/atom.xml" rel="self"/>
  <link href="http://stevenfarlie.github.io/"/>
  <updated>2014-02-07T16:13:27+11:00</updated>
  <id>http://stevenfarlie.github.io/</id>
  <author>
    <name><![CDATA[Steven Farlie]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fun Friday #1]]></title>
    <link href="http://stevenfarlie.github.io/blog/2014/02/07/fun-friday-2014-02-07/"/>
    <updated>2014-02-07T12:37:40+11:00</updated>
    <id>http://stevenfarlie.github.io/blog/2014/02/07/fun-friday-2014-02-07</id>
    <content type="html"><![CDATA[<p>Every Friday I try to have a little programming fun. It might be some tools or some libraries or maybe just catching up on the blogs.</p>

<h2>Enter The Matrix</h2>

<p>Today I started with <a href="https://help.ubuntu.com/lts/serverguide/lxc.html">LXC</a>, the lightweight container technology for Linux. The server guide from Ubuntu is very well written and a great introduction. With a basic Ubuntu 12.04 server install I had a container up and running first try, all installed and ready to go. Very impressive!</p>

<p>I would recommend giving LXC containers a try. Even if you aren&rsquo;t on Linux, and run a &ldquo;development&rdquo; VM or a &ldquo;server&rdquo; VM on OSX or Windows. If you&rsquo;ve ever had that problem of a giant complicated server that does four or five websites, plus some hacking around with disks and file sharing and all that junk then give it a go. It&rsquo;s a really neat way to split up a server without wasting much RAM or CPU.</p>

<p>Now let&rsquo;s just all forget that BSD and Solaris have had this for years&hellip;</p>

<h2>Yo-ho-ho</h2>

<p>The other challenge of the day was to go through some Node/Yeoman/Angular stuff from <a href="http://tylerhenkel.com/creating-apps-with-angular-and-node-using-yeoman/?utm_source=javascriptweekly&amp;utm_medium=email">this blog post</a> by Tyler Henkel.</p>

<p>So, yeah, Node. I was on Node maybe&hellip; three years ago? Aside from Yeoman nothing much seems to have changed. Express is still the big web framework and everything is dominated by callbacks and people arguing over the best way of handling callbacks. (Not that there is anything wrong with callbacks. One of my best friends is a callback.)</p>

<p>One of the most annoying parts of the Node/NPM installation is that it <a href="https://npmjs.org/doc/README.html">still recommends a single system-wide installation</a>. I have a long, long (omg so long) history dealing with projects have different runtimes. Ruby 1.8.7/1.9/2.0/2.1, Java 1.4/1.5/1.6/1.7. All of these usually have some compiled library that only works on a particular version. The strange thing is, it&rsquo;s actually really straight-forward to just install Node locally:</p>

<pre>
$ tar xzf node-v0.10.25.tar.gz 
$ cd node-v0.10.25
$ ./configure --prefix=~/.local/opt/node
$ make && make install
$ export PATH=$PATH:~/.local/opt/node/bin
</pre>


<p>Now you can <code>npm install -g</code> to your heart&rsquo;s content. Install new versions of Node whenever you want and keep the old ones. Just update your <code>$PATH</code> to match.</p>

<p>One of the big pluses in the Node world is the quality of their command-line tools. They have all the &ldquo;modern&rdquo; features like proper <code>--help</code> text and ANSI colour support, but <code>yo</code> (from Yeoman) goes another step ahead to have interactive prompts. The Javascript community is lucky in that they <em>do</em>  have to account for users who aren&rsquo;t intimately familiar with the command line. It&rsquo;s a very beginner-friendly place and I think there is a lot that other communities can learn.</p>

<p>Still, thanks but no thanks to callbacks.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Grep-calendar Lives! And a Rant]]></title>
    <link href="http://stevenfarlie.github.io/blog/2014/02/02/grep-calendar-lives/"/>
    <updated>2014-02-02T14:34:30+11:00</updated>
    <id>http://stevenfarlie.github.io/blog/2014/02/02/grep-calendar-lives</id>
    <content type="html"><![CDATA[<p>Today I finally pushed the reworking of <code>grep-calendar</code>. It&rsquo;s a web service that lets you grep your webcal feeds, removing the ones that you don&rsquo;t want. tl;dr you can find it <a href="http://grep-calendar.herokuapp.com/index.html">here</a>.</p>

<p>My girlfriend lives through her calendar. Having a travelling business and working odd hours means that it&rsquo;s really useful to know when her day is over. The problem is that her company software only gives a calendar feed for the entire company. So I get 10 employees worth of appointments showing up on my calendar. Not ideal. So I decided to write a little program that will filter out any non-girlfriend related items in the calendar. Just give <code>url=http://example.com/feed.ical</code> and <code>query=Girlfriend</code> and it returns ical events containing &lsquo;Girlfriend&rsquo;. Sorted.</p>

<p>To start, I did a little search and found the <a href="http://rubygems.org/gems/icalendar">ICalendar gem</a>. Fifteen minutes later I had a <a href="http://www.sinatrarb.com/">Sinatra</a> app on <a href="https://devcenter.heroku.com/">Heroku</a> working perfectly. I was so pleased with the result I showed my girl how clean my calendar is now.</p>

<p>That was the first mistake.</p>

<p>My girlfriend, also pleased as punch with the solution, shared it with everyone in her company. The instructions she gave were pretty straightforward: copy the URL, replace &ldquo;FirstName%20LastName&rdquo; with your own name, keeping the %20, and paste that url into your calendar. Now her employees are, in some cases, about as computer literate as our cat. So I say, &ldquo;well I could probably just put a nice web page in front of it to make it easy&rdquo;.</p>

<p>And that was my second mistake.</p>

<p>Of course, I could have just bashed out something without styling, using simple forms and whole-page refreshes. But no, single page apps are the shiny new thing. Plus they have been around for years now. They must be really mature and productive after all this time. Let&rsquo;s do AngularJS and Foundation.</p>

<p>And that was my third mistake.</p>

<p>Fifteen hours later, scraping in time here and there, I&rsquo;ve finally gotten the first version pushed. Web development feels so incredibly backward and hacky. It was obviously made up as we went along and takes a really long time to get something out that looks &ldquo;normal&rdquo;. By comparison, GUI toolkits can get consistent look and feel without requiring three wildly different languages, or an array of preprocessors, or entire re-implementation of the tech stack in order to get a test suite to run headless.</p>

<p>In the end I didn&rsquo;t even include a test suite outside of the core Ruby algorithm. It&rsquo;s just an absolute nightmare to test a page without having to fire up a whole web browser.</p>

<p>But in reality it was the little things. Like, trying to retrieve query parameters when in JS (I guess you have to parse them yourself?). Or how a big toolkit like Foundation provides a lot of form styling, but not a spinner, which is probably the most important visual feedback you can give.</p>

<p>I just find the web so disappointing. The things that could have been! <a href="http://www.w3.org/Submission/1996/1/WD-jsss-960822">Javascript Style Sheets!</a> Or even just stealing the layout concepts from GUI toolkits. The web was choking on semantic document layout for years before finally ditching it for grids.</p>

<p>There has been a lot of innovation in visual design on the web, I&rsquo;ll grant it that. But it just seems that unless you are a professional web designer you can&rsquo;t get very far. Why can&rsquo;t my girlfriend, who has maintained multiple Wordpress blogs, debug simple problems with her website? It&rsquo;s because there are just so many standards, so many concepts and so many moving parts to get a bit of text, a few images and a form onto someone&rsquo;s screen.</p>

<p>It&rsquo;s pretty disgraceful, the state of things. But you see it all through the industry. Every new layer you add is another layer between the professionals and the amateurs. Us pros do really well out of it. Pity it&rsquo;s so hard for everyone else.</p>
]]></content>
  </entry>
  
</feed>
